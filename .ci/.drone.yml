kind: pipeline
type: kubernetes
name: usufruct server

steps:
  - name: test-multiline
    image: node:16
    commands:
    - 'export npmVersion=$(echo $DRONE_TAG | sed -e s/^server-//)'
    - |
      echo "hello"
      echo $DRONE_TAG
      echo "double ${DRONE_TAG}"
      echo 'single ${DRONE_TAG}'
      echo $npmVersion
      echo "double npm ${npmVersion}"
      echo 'single npm ${npmVersion}'
      echo "double2 npm $npmVersion"
      echo 'single2 npm $npmVersion'
      echo ${PWD}


  - name: setup
    image: node:16
    commands:
      - "yarn"
  
  - name: generate openapi-spec
    image: node:16
    when:
      ref:
      - refs/tags/server-*.*.* #When there is a tag like server-0.0.1 then build the sdk and publish it at version 0.0.1
    commands:
      - "yarn generate:openapi-spec"
  
  - name: generate sdk
    image: docker:20.10-dind
    when:
      ref:
      - refs/tags/server-*.*.* #When there is a tag like server-0.0.1 then build the sdk and publish it at version 0.0.1
    commands:
      - 'export npmVersion=$(echo $DRONE_TAG | sed -e s/^server-//)'
      - echo "Generating SDK with version $npmVersion"
      - |
        docker run --user 1000:1000 --rm -v ${PWD}/packages:/local \
          openapitools/openapi-generator-cli generate --additional-properties=npmVersion=$npmVersion \
          -i /local/server/swagger-spec.json \
          -g typescript-fetch \
          -o /local/sdk-new \
          -c /local/server/swagger-config.json
    volumes:
    - name: dockersock
      path: /var/run
  
  # - name: publish sdk
  #   image: node:16
  #   when:
  #     ref:
  #     - refs/tags/server-*.*.* #When there is a tag like server-0.0.1 then build the sdk and publish it at version 0.0.1
  #   commands:
  #     - 'export npmVersion=$(echo $DRONE_TAG | sed -e s/^server-//)'
  #     - echo "Publishing SDK with version $npmVersion"
  #     - cd packages/sdk-new && yarn pack
  #     - ls
  #     - yarn publish ""
    

services:
- name: postgres
  image: postgres:14
  environment:
    POSTGRES_PASSWORD: "local"
    POSTGRES_USER: "local"
    POSTGRES_DB: "usufruct"

- name: redis
  image: redis:6.2.6

- name: docker
  image: docker:dind
  privileged: true
  volumes:
  - name: dockersock
    path: /var/run

volumes:
- name: dockersock
  temp: {}